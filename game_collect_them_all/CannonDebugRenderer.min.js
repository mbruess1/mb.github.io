THREE.CannonDebugRenderer=function(e,a,r){r=r||{},this.scene=e,this.world=a,this._meshes=[],this._material=new THREE.MeshBasicMaterial({color:65280,wireframe:!0}),this._sphereGeometry=new THREE.SphereGeometry(1),this._boxGeometry=new THREE.BoxGeometry(1,1,1),this._planeGeometry=new THREE.PlaneGeometry(10,10,10,10),this._cylinderGeometry=new THREE.CylinderGeometry(1,1,10,10)},THREE.CannonDebugRenderer.prototype={tmpVec0:new CANNON.Vec3,tmpVec1:new CANNON.Vec3,tmpVec2:new CANNON.Vec3,tmpQuat0:new CANNON.Vec3,update:function(){for(var e=this.world.bodies,a=this._meshes,r=this.tmpVec0,t=this.tmpQuat0,n=0,o=0;o!==e.length;o++)for(var s=e[o],i=0;i!==s.shapes.length;i++){var c=s.shapes[i];this._updateMesh(n,s,c);var h=a[n];h&&(s.quaternion.vmult(s.shapeOffsets[i],r),s.position.vadd(r,r),s.quaternion.mult(s.shapeOrientations[i],t),h.position.copy(r),h.quaternion.copy(t)),n++}for(var o=n;o<a.length;o++){var h=a[o];h&&this.scene.remove(h)}a.length=n},_updateMesh:function(e,a,r){var t=this._meshes[e];this._typeMatch(t,r)||(t&&this.scene.remove(t),t=this._meshes[e]=this._createMesh(r)),this._scaleMesh(t,r)},_typeMatch:function(e,a){if(!e)return!1;var r=e.geometry;return r instanceof THREE.SphereGeometry&&a instanceof CANNON.Sphere||r instanceof THREE.BoxGeometry&&a instanceof CANNON.Box||r instanceof THREE.PlaneGeometry&&a instanceof CANNON.Plane||r.id===a.geometryId&&a instanceof CANNON.ConvexPolyhedron||r.id===a.geometryId&&a instanceof CANNON.Trimesh||r.id===a.geometryId&&a instanceof CANNON.Heightfield},_createMesh:function(e){var a,r=this._material;switch(e.type){case CANNON.Shape.types.SPHERE:a=new THREE.Mesh(this._sphereGeometry,r);break;case CANNON.Shape.types.BOX:a=new THREE.Mesh(this._boxGeometry,r);break;case CANNON.Shape.types.PLANE:a=new THREE.Mesh(this._planeGeometry,r);break;case CANNON.Shape.types.CONVEXPOLYHEDRON:for(var t=new THREE.Geometry,n=0;n<e.vertices.length;n++){var o=e.vertices[n];t.vertices.push(new THREE.Vector3(o.x,o.y,o.z))}for(var n=0;n<e.faces.length;n++)for(var s=e.faces[n],i=s[0],c=1;c<s.length-1;c++){var h=s[c],d=s[c+1];t.faces.push(new THREE.Face3(i,h,d))}t.computeBoundingSphere(),t.computeFaceNormals(),a=new THREE.Mesh(t,r),e.geometryId=t.id;break;case CANNON.Shape.types.TRIMESH:for(var p=new THREE.Geometry,l=this.tmpVec0,N=this.tmpVec1,m=this.tmpVec2,n=0;n<e.indices.length/3;n++){e.getTriangleVertices(n,l,N,m),p.vertices.push(new THREE.Vector3(l.x,l.y,l.z),new THREE.Vector3(N.x,N.y,N.z),new THREE.Vector3(m.x,m.y,m.z));var c=p.vertices.length-3;p.faces.push(new THREE.Face3(c,c+1,c+2))}p.computeBoundingSphere(),p.computeFaceNormals(),a=new THREE.Mesh(p,r),e.geometryId=p.id;break;case CANNON.Shape.types.HEIGHTFIELD:for(var p=new THREE.Geometry,l=this.tmpVec0,N=this.tmpVec1,m=this.tmpVec2,v=0;v<e.data.length-1;v++)for(var E=0;E<e.data[v].length-1;E++)for(var w=0;2>w;w++){e.getConvexTrianglePillar(v,E,0===w),l.copy(e.pillarConvex.vertices[0]),N.copy(e.pillarConvex.vertices[1]),m.copy(e.pillarConvex.vertices[2]),l.vadd(e.pillarOffset,l),N.vadd(e.pillarOffset,N),m.vadd(e.pillarOffset,m),p.vertices.push(new THREE.Vector3(l.x,l.y,l.z),new THREE.Vector3(N.x,N.y,N.z),new THREE.Vector3(m.x,m.y,m.z));var n=p.vertices.length-3;p.faces.push(new THREE.Face3(n,n+1,n+2))}p.computeBoundingSphere(),p.computeFaceNormals(),a=new THREE.Mesh(p,r),e.geometryId=p.id}return a&&this.scene.add(a),a},_scaleMesh:function(e,a){switch(a.type){case CANNON.Shape.types.SPHERE:var r=a.radius;e.scale.set(r,r,r);break;case CANNON.Shape.types.BOX:e.scale.copy(a.halfExtents),e.scale.multiplyScalar(2);break;case CANNON.Shape.types.CONVEXPOLYHEDRON:e.scale.set(1,1,1);break;case CANNON.Shape.types.TRIMESH:e.scale.copy(a.scale);break;case CANNON.Shape.types.HEIGHTFIELD:e.scale.set(1,1,1)}}};