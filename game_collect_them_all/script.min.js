function onKeyDown(e){32===e.keyCode&&canJump===!0&&(jump=!0)}var renderer,scene,camera,geometry,material,mesh,world,meshes=[],bodies=[],wallBodies=[],canJump=!1,jump=!1,cannonDebugRenderer,box=function(){"use strict";geometry=new THREE.BoxGeometry(20,20,20),material=new THREE.MeshBasicMaterial({wireframe:!0,opacity:.1,transparent:!0}),mesh=new THREE.Mesh(geometry,material),mesh.position.y=10,scene.add(mesh);var e=new CANNON.Material,a=new CANNON.Plane,r=new CANNON.Body({mass:0,shape:a,material:e});r.quaternion.setFromAxisAngle(new CANNON.Vec3(0,1,0),Math.PI/2),r.position.set(-10,0,0),world.add(r);var n=new CANNON.Plane,t=new CANNON.Body({mass:0,shape:n,material:e});t.quaternion.setFromAxisAngle(new CANNON.Vec3(0,1,0),-Math.PI/2),t.position.set(10,0,0),world.add(t);var o=new CANNON.Plane,s=new CANNON.Body({mass:0,shape:o,material:e});s.position.set(0,0,-10),world.add(s);var i=new CANNON.Plane,c=new CANNON.Body({mass:0,shape:i,material:e});c.quaternion.setFromAxisAngle(new CANNON.Vec3(0,1,0),Math.PI),c.position.set(0,0,10),world.add(c);var d=new CANNON.Plane,l=new CANNON.Body({mass:0,shape:d,material:e});l.quaternion.setFromAxisAngle(new CANNON.Vec3(1,0,0),Math.PI/2),l.position.set(0,20,0),world.add(l)},sphere=function(){geometry=new THREE.SphereGeometry(1);var e;for(e=0;e<geometry.faces.length;e++){var a=geometry.faces[e];a.color.setHex(16777215*Math.random())}material=new THREE.MeshBasicMaterial({color:16777215*Math.random()});var r=new THREE.Mesh(geometry,material);scene.add(r),meshes.push(r)},addBall=function(e,a,r){sphere();var n=new CANNON.Sphere(1),t=new CANNON.Material,o=new CANNON.Body({mass:.1,shape:n,material:t});o.position.set(e,a,r),world.add(o),o.addEventListener("collide",function(e){console.log(e.body),canJump=!0}),bodies.push(o)},wall=function(){var e=new THREE.CubeGeometry(60,10,5,1,1,1),a=new THREE.MeshBasicMaterial({color:13408614}),r=new THREE.Mesh(e,a);r.position.set(0,0,25),scene.add(r);var n=new THREE.Mesh(e,a);n.position.set(25,0,0),n.rotation.y=Math.PI/2,scene.add(n);var t=new THREE.Mesh(e,a);t.position.set(0,0,-25),scene.add(t);var o=new THREE.Mesh(e,a);o.position.set(-25,0,0),o.rotation.y=Math.PI/2,scene.add(o);var s=new CANNON.Box(new CANNON.Vec3(60,10,5)),i=new CANNON.Material({wireframe:!0}),c=new CANNON.Body({mass:.1,shape:s,material:i});c.position.copy(r.position),world.add(c),wallBodies.push(c),c.position.copy(n.position),world.add(c),wallBodies.push(c),c.position.copy(t.position),world.add(c),wallBodies.push(c),c.position.copy(o.position),world.add(c),wallBodies.push(c)},ground=function(){var e=new THREE.PlaneGeometry(20,20,10,10),a=new THREE.MeshBasicMaterial({color:4473924,side:THREE.DoubleSide}),r=new THREE.Mesh(e,a);r.position.y=-.5,r.rotation.x=Math.PI/2,scene.add(r);var n=new CANNON.Plane;a=new CANNON.Material({color:268435455});var t=new CANNON.Body({mass:0,shape:n,material:a});t.quaternion.setFromAxisAngle(new CANNON.Vec3(1,0,0),-Math.PI/2),world.add(t),r.position.copy(t.position)},init=function(){renderer=new THREE.WebGLRenderer,renderer.setClearColor(16711680,.5),renderer.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(renderer.domElement),scene=new THREE.Scene,camera=new THREE.PerspectiveCamera(40,window.innerWidth/window.innerHeight,1,1e3),camera.position.set(30,30,30),camera.lookAt(new THREE.Vector3(0,8,0)),world=new CANNON.World,world.broadphase=new CANNON.NaiveBroadphase,world.gravity.set(0,-15,0),ground(),box();var e;for(e=0;50>e;e++)addBall(10*Math.random()-5,10*Math.random()+5,10*Math.random()-5);document.addEventListener("keydown",onKeyDown,!1),cannonDebugRenderer=new THREE.CannonDebugRenderer(scene,world)},stop=!1,animate=function(){requestAnimationFrame(animate),world.step(1/60);var e;for(e=0;e<meshes.length;e++){var r=meshes[e],n=bodies[e];r.position.copy(n.position),r.quaternion.copy(n.quaternion)}if(jump){for(e=0;e<meshes.length;e++){var r=meshes[e],n=bodies[e];n.velocity.y=Math.floor(20*Math.random()+1),r.position.copy(n.position),canJump=!1}jump=!1}var t=performance.now();camera.position.x=40*-Math.cos(2e-4*t),camera.position.z=40*Math.sin(2e-4*t),camera.lookAt(new THREE.Vector3(0,8,0)),renderer.render(scene,camera)};init(),animate();